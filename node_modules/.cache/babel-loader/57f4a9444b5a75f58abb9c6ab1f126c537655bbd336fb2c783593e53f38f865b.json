{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\david\\\\OneDrive\\\\Desktop\\\\ReactJs\\\\react\\\\Airbnb\\\\src\\\\components\\\\PaymentModal.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { CardElement, useStripe, useElements } from '@stripe/react-stripe-js';\nimport { paymentService } from '../services/PaymentService';\nimport './PaymentModal.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction PaymentModal({\n  amount,\n  onSuccess,\n  onClose\n}) {\n  _s();\n  const [selectedMethod, setSelectedMethod] = useState('creditCard');\n  const [phoneNumber, setPhoneNumber] = useState('');\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState('');\n  const stripe = useStripe();\n  const elements = useElements();\n  const handleSubmit = async e => {\n    e.preventDefault();\n    setError('');\n    setLoading(true);\n    try {\n      let result;\n      switch (selectedMethod) {\n        case 'creditCard':\n          if (!stripe || !elements) {\n            throw new Error('Stripe not initialized');\n          }\n          const {\n            error,\n            paymentMethod\n          } = await stripe.createPaymentMethod({\n            type: 'card',\n            card: elements.getElement(CardElement)\n          });\n          if (error) {\n            throw new Error(error.message);\n          }\n          result = await paymentService.processCreditCardPayment(amount, 'UGX', paymentMethod);\n          break;\n        case 'mtn':\n          result = await paymentService.processMTNPayment(amount, phoneNumber);\n          break;\n        case 'airtel':\n          result = await paymentService.processAirtelPayment(amount, phoneNumber);\n          break;\n        default:\n          throw new Error('Invalid payment method');\n      }\n      onSuccess(result);\n    } catch (error) {\n      setError(error.message);\n    } finally {\n      setLoading(false);\n    }\n  };\n  const paymentMethods = paymentService.getAvailablePaymentMethods();\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"payment-modal-overlay\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"payment-modal\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"close-button\",\n        onClick: onClose,\n        children: \"\\xD7\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Complete Your Payment\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"amount\",\n        children: [\"Amount: UGX \", amount.toLocaleString()]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"payment-methods\",\n        children: paymentMethods.map(method => /*#__PURE__*/_jsxDEV(\"button\", {\n          className: `payment-method-button ${selectedMethod === method.id ? 'selected' : ''}`,\n          onClick: () => setSelectedMethod(method.id),\n          children: [/*#__PURE__*/_jsxDEV(\"i\", {\n            className: `fas fa-${method.icon}`\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 75,\n            columnNumber: 15\n          }, this), method.name]\n        }, method.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleSubmit,\n        children: [selectedMethod === 'creditCard' && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"card-element-container\",\n          children: /*#__PURE__*/_jsxDEV(CardElement, {\n            options: {\n              style: {\n                base: {\n                  fontSize: '16px',\n                  color: '#424770',\n                  '::placeholder': {\n                    color: '#aab7c4'\n                  }\n                },\n                invalid: {\n                  color: '#9e2146'\n                }\n              }\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 84,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 13\n        }, this), (selectedMethod === 'mtn' || selectedMethod === 'airtel') && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"phone-input\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"Phone Number\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 105,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"tel\",\n            value: phoneNumber,\n            onChange: e => setPhoneNumber(e.target.value),\n            placeholder: \"Enter your phone number\",\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 106,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 13\n        }, this), error && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"error-message\",\n          children: error\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 116,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          className: \"pay-button\",\n          disabled: loading || !stripe,\n          children: loading ? 'Processing...' : 'Pay Now'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 118,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 61,\n    columnNumber: 5\n  }, this);\n}\n_s(PaymentModal, \"lhAAHt8lxYVxEW/I749n7pxKYWE=\", false, function () {\n  return [useStripe, useElements];\n});\n_c = PaymentModal;\nexport default PaymentModal;\nvar _c;\n$RefreshReg$(_c, \"PaymentModal\");","map":{"version":3,"names":["React","useState","CardElement","useStripe","useElements","paymentService","jsxDEV","_jsxDEV","PaymentModal","amount","onSuccess","onClose","_s","selectedMethod","setSelectedMethod","phoneNumber","setPhoneNumber","loading","setLoading","error","setError","stripe","elements","handleSubmit","e","preventDefault","result","Error","paymentMethod","createPaymentMethod","type","card","getElement","message","processCreditCardPayment","processMTNPayment","processAirtelPayment","paymentMethods","getAvailablePaymentMethods","className","children","onClick","fileName","_jsxFileName","lineNumber","columnNumber","toLocaleString","map","method","id","icon","name","onSubmit","options","style","base","fontSize","color","invalid","value","onChange","target","placeholder","required","disabled","_c","$RefreshReg$"],"sources":["C:/Users/david/OneDrive/Desktop/ReactJs/react/Airbnb/src/components/PaymentModal.jsx"],"sourcesContent":["import React, { useState } from 'react';\r\nimport { CardElement, useStripe, useElements } from '@stripe/react-stripe-js';\r\nimport { paymentService } from '../services/PaymentService';\r\nimport './PaymentModal.css';\r\n\r\nfunction PaymentModal({ amount, onSuccess, onClose }) {\r\n  const [selectedMethod, setSelectedMethod] = useState('creditCard');\r\n  const [phoneNumber, setPhoneNumber] = useState('');\r\n  const [loading, setLoading] = useState(false);\r\n  const [error, setError] = useState('');\r\n  \r\n  const stripe = useStripe();\r\n  const elements = useElements();\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    setError('');\r\n    setLoading(true);\r\n\r\n    try {\r\n      let result;\r\n\r\n      switch (selectedMethod) {\r\n        case 'creditCard':\r\n          if (!stripe || !elements) {\r\n            throw new Error('Stripe not initialized');\r\n          }\r\n          const { error, paymentMethod } = await stripe.createPaymentMethod({\r\n            type: 'card',\r\n            card: elements.getElement(CardElement),\r\n          });\r\n          if (error) {\r\n            throw new Error(error.message);\r\n          }\r\n          result = await paymentService.processCreditCardPayment(amount, 'UGX', paymentMethod);\r\n          break;\r\n\r\n        case 'mtn':\r\n          result = await paymentService.processMTNPayment(amount, phoneNumber);\r\n          break;\r\n\r\n        case 'airtel':\r\n          result = await paymentService.processAirtelPayment(amount, phoneNumber);\r\n          break;\r\n\r\n        default:\r\n          throw new Error('Invalid payment method');\r\n      }\r\n\r\n      onSuccess(result);\r\n    } catch (error) {\r\n      setError(error.message);\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  const paymentMethods = paymentService.getAvailablePaymentMethods();\r\n\r\n  return (\r\n    <div className=\"payment-modal-overlay\">\r\n      <div className=\"payment-modal\">\r\n        <button className=\"close-button\" onClick={onClose}>Ã—</button>\r\n        \r\n        <h2>Complete Your Payment</h2>\r\n        <p className=\"amount\">Amount: UGX {amount.toLocaleString()}</p>\r\n\r\n        <div className=\"payment-methods\">\r\n          {paymentMethods.map(method => (\r\n            <button\r\n              key={method.id}\r\n              className={`payment-method-button ${selectedMethod === method.id ? 'selected' : ''}`}\r\n              onClick={() => setSelectedMethod(method.id)}\r\n            >\r\n              <i className={`fas fa-${method.icon}`}></i>\r\n              {method.name}\r\n            </button>\r\n          ))}\r\n        </div>\r\n\r\n        <form onSubmit={handleSubmit}>\r\n          {selectedMethod === 'creditCard' && (\r\n            <div className=\"card-element-container\">\r\n              <CardElement\r\n                options={{\r\n                  style: {\r\n                    base: {\r\n                      fontSize: '16px',\r\n                      color: '#424770',\r\n                      '::placeholder': {\r\n                        color: '#aab7c4',\r\n                      },\r\n                    },\r\n                    invalid: {\r\n                      color: '#9e2146',\r\n                    },\r\n                  },\r\n                }}\r\n              />\r\n            </div>\r\n          )}\r\n\r\n          {(selectedMethod === 'mtn' || selectedMethod === 'airtel') && (\r\n            <div className=\"phone-input\">\r\n              <label>Phone Number</label>\r\n              <input\r\n                type=\"tel\"\r\n                value={phoneNumber}\r\n                onChange={(e) => setPhoneNumber(e.target.value)}\r\n                placeholder=\"Enter your phone number\"\r\n                required\r\n              />\r\n            </div>\r\n          )}\r\n\r\n          {error && <div className=\"error-message\">{error}</div>}\r\n\r\n          <button\r\n            type=\"submit\"\r\n            className=\"pay-button\"\r\n            disabled={loading || !stripe}\r\n          >\r\n            {loading ? 'Processing...' : 'Pay Now'}\r\n          </button>\r\n        </form>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default PaymentModal; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}